"""add role permissions

Revision ID: 9769bae50c41
Revises: 4b7aeabb87a7
Create Date: 2025-06-13 15:24:08.197810

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9769bae50c41'
down_revision = '4b7aeabb87a7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_users_role_id_roles', 'roles', ['role_id'], ['id'])
        batch_op.drop_column('role')

    # seed initial roles and permissions
    roles_table = sa.table('roles', sa.column('id', sa.Integer), sa.column('name', sa.String))
    permissions_table = sa.table('permissions', sa.column('id', sa.Integer), sa.column('name', sa.String))
    role_permissions_table = sa.table('roles_permissions', sa.column('role_id', sa.Integer), sa.column('permission_id', sa.Integer))

    op.bulk_insert(permissions_table, [
        {'id': 1, 'name': 'view_dashboard'},
        {'id': 2, 'name': 'manage_users'},
    ])

    op.bulk_insert(roles_table, [
        {'id': 1, 'name': 'root_admin'},
        {'id': 2, 'name': 'meeting_coordinator'},
        {'id': 3, 'name': 'returning_officer'},
    ])

    op.bulk_insert(role_permissions_table, [
        {'role_id': 1, 'permission_id': 1},
        {'role_id': 1, 'permission_id': 2},
        {'role_id': 2, 'permission_id': 1},
    ])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', sa.VARCHAR(length=50), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('role_id')

    op.drop_table('roles_permissions')
    op.drop_table('roles')
    op.drop_table('permissions')
    # ### end Alembic commands ###
